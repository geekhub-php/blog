<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Category;
use AppBundle\Entity\Post;

/**
 * PostRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @return object
     */
    public function getCountCategories($categories)
    {
        $categoriesAndCount = array(array('id' => '', 'name' => '', 'count' => ''));
        $i = 0;
        foreach ($categories as $key => $value) {
            //echo $value->getId();
            $qb = $this->createQueryBuilder('p');
            $qb->select('count(p.id)');
            $qb->where('p.category = :category');
            $qb->setParameter('category', $value->getId());
            //echo $qb->getQuery()->getSingleScalarResult();
           // echo serialize(array('id' =>$value->getId(),'name'=>$value->getName(),'count'=>$qb->getQuery()->getSingleScalarResult()));
            $categoriesAndCount[$i]['id'] = $value->getId();
            $categoriesAndCount[$i]['name'] = $value->getName();
            $categoriesAndCount[$i]['count'] = $qb->getQuery()->getSingleScalarResult();
            ++$i;
        }

        return $categoriesAndCount;
    }

    /**
     * @return object
     */
    public function getPostsTopRated()
    {
        return $this->findBy(array(), array('rating' => 'DESC'));
    }
    /**
     * @return object
     */
    public function getPostsMostCommented()
    {
        $qb = $this->createQueryBuilder('p');
        $qb->Select('p.id, p.name', 'p.description, count(c.post) as countId');
        $qb->leftJoin('AppBundle\\Entity\\Comment\\Comment', 'c', 'WITH', 'c.post=p.id');
        //$qb->addSelect('count(c.post) as countId');

        $qb->groupBy('p.id');
        $qb->orderBy('countId', 'DESC');

        return $qb->getQuery()->getScalarResult();

        //$qb->where('c.post = :category');
        //$qb->where('с.post =2');
        //$qb->from('AppBundle:Post', 'p');
        //$qb->innerJoin('c.countId','p');
        //$qb->orderBy('c.countId', "DESC");
        //$qb->groupBy('p.id');
        // $qb->groupBy('c.id');
        //return serialize
        //echo $qb->getQuery()->getSingleScalarResult();
        //echo serialize($qb->getQuery()->getScalarResult()).'<br>';
    }
}
