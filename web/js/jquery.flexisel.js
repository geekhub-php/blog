!function(e){e.fn.flexisel=function(n){var t,i,l,a,o=e.extend({visibleItems:4,itemsToScroll:3,animationSpeed:400,infinite:!0,navigationTargetSelector:null,autoPlay:{enable:!1,interval:5e3,pauseOnHover:!0},responsiveBreakpoints:{portrait:{changePoint:480,visibleItems:1,itemsToScroll:1},landscape:{changePoint:640,visibleItems:2,itemsToScroll:2},tablet:{changePoint:768,visibleItems:3,itemsToScroll:3}}},n),s=e(this),r=e.extend(o,n),c=!0,f=r.visibleItems,d=r.itemsToScroll,u=[],v={init:function(){return this.each(function(){v.appendHTML(),v.setEventHandlers(),v.initializeItems()})},initializeItems:function(){var n=r.responsiveBreakpoints;for(var l in n)u.push(n[l]);u.sort(function(e,n){return e.changePoint-n.changePoint});var a=s.children();t=v.getCurrentItemWidth(),i=a.length,a.width(t),s.css({left:-t*(f+1)}),s.fadeIn(),e(window).trigger("resize")},appendHTML:function(){if(s.addClass("nbs-flexisel-ul"),s.wrap("<div class='nbs-flexisel-container'><div class='nbs-flexisel-inner'></div></div>"),s.find("li").addClass("nbs-flexisel-item"),r.navigationTargetSelector&&e(r.navigationTargetSelector).length>0?e("<div class='nbs-flexisel-nav-left'></div><div class='nbs-flexisel-nav-right'></div>").appendTo(r.navigationTargetSelector):(r.navigationTargetSelector=s.parent(),e("<div class='nbs-flexisel-nav-left'></div><div class='nbs-flexisel-nav-right'></div>").insertAfter(s)),r.infinite){var n=s.children(),t=n.clone(),i=n.clone();s.prepend(t),s.append(i)}},setEventHandlers:function(){var n=s.children();e(window).on("resize",function(i){clearTimeout(l),l=setTimeout(function(){v.calculateDisplay(),t=v.getCurrentItemWidth(),n.width(t),r.infinite?s.css({left:-t*Math.floor(n.length/2)}):(v.clearDisabled(),e(r.navigationTargetSelector).find(".nbs-flexisel-nav-left").addClass("disabled"),s.css({left:0}))},100)}),e(r.navigationTargetSelector).find(".nbs-flexisel-nav-left").on("click",function(e){v.scroll(!0)}),e(r.navigationTargetSelector).find(".nbs-flexisel-nav-right").on("click",function(e){v.scroll(!1)}),r.autoPlay.enable&&(v.setAutoplayInterval(),r.autoPlay.pauseOnHover===!0&&s.on({mouseenter:function(){c=!1},mouseleave:function(){c=!0}})),s[0].addEventListener("touchstart",v.touchHandler.handleTouchStart,!1),s[0].addEventListener("touchmove",v.touchHandler.handleTouchMove,!1)},calculateDisplay:function(){var n=e("html").width(),t=u[u.length-1].changePoint;for(var i in u){if(n>=t){f=r.visibleItems,d=r.itemsToScroll;break}if(n<u[i].changePoint){f=u[i].visibleItems,d=u[i].itemsToScroll;break}}},scroll:function(e){if("undefined"==typeof e&&(e=!0),1==c){if(c=!1,t=v.getCurrentItemWidth(),r.autoPlay.enable&&clearInterval(a),r.infinite)s.animate({left:e?"+="+t*d:"-="+t*d},r.animationSpeed,function(){c=!0,e?v.offsetItemsToBeginning(d):v.offsetItemsToEnd(d),v.offsetSliderPosition(e)});else{var n=t*d;e?s.animate({left:v.calculateNonInfiniteLeftScroll(n)},r.animationSpeed,function(){c=!0}):s.animate({left:v.calculateNonInfiniteRightScroll(n)},r.animationSpeed,function(){c=!0})}r.autoPlay.enable&&v.setAutoplayInterval()}},touchHandler:{xDown:null,yDown:null,handleTouchStart:function(e){this.xDown=e.touches[0].clientX,this.yDown=e.touches[0].clientY},handleTouchMove:function(e){if(this.xDown&&this.yDown){var n=e.touches[0].clientX,t=e.touches[0].clientY,i=this.xDown-n;this.yDown-t;Math.abs(i)>0&&(i>0?v.scroll(!1):v.scroll(!0)),this.xDown=null,this.yDown=null,c=!0}}},getCurrentItemWidth:function(){return s.parent().width()/f},offsetItemsToBeginning:function(e){"undefined"==typeof e&&(e=1);for(var n=0;n<e;n++)s.children().last().insertBefore(s.children().first())},offsetItemsToEnd:function(e){"undefined"==typeof e&&(e=1);for(var n=0;n<e;n++)s.children().first().insertAfter(s.children().last())},offsetSliderPosition:function(e){var n=parseInt(s.css("left").replace("px",""));e?n-=t*d:n+=t*d,s.css({left:n})},getOffsetPosition:function(){return parseInt(s.css("left").replace("px",""))},calculateNonInfiniteLeftScroll:function(n){return v.clearDisabled(),v.getOffsetPosition()+n>=0?(e(r.navigationTargetSelector).find(".nbs-flexisel-nav-left").addClass("disabled"),0):v.getOffsetPosition()+n},calculateNonInfiniteRightScroll:function(n){v.clearDisabled();var l=i*t-f*t;return v.getOffsetPosition()-n<=-l?(e(r.navigationTargetSelector).find(".nbs-flexisel-nav-right").addClass("disabled"),-l):v.getOffsetPosition()-n},setAutoplayInterval:function(){a=setInterval(function(){c&&v.scroll(!1)},r.autoPlay.interval)},clearDisabled:function(){var n=e(r.navigationTargetSelector);n.find(".nbs-flexisel-nav-left").removeClass("disabled"),n.find(".nbs-flexisel-nav-right").removeClass("disabled")}};return v[n]?v[n].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof n&&n?void e.error('Method "'+method+'" does not exist in flexisel plugin!'):v.init.apply(this)}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
